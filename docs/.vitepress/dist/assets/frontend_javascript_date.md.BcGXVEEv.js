import{_ as i,c as e,o as s,aR as a}from"./chunks/framework.BwSdcL0X.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/javascript/date.md","filePath":"frontend/javascript/date.md","lastUpdated":1715234692000}'),t={name:"frontend/javascript/date.md"},l=a(`<h2 id="_3-7-1基本概念" tabindex="-1">3.7.1基本概念 <a class="header-anchor" href="#_3-7-1基本概念" aria-label="Permalink to &quot;3.7.1基本概念&quot;">​</a></h2><ol><li><p>Date是JavaScript的内置对象，系统在Date对象中封装了与日期和时间相关的属性和方法。</p></li><li><p>Date使用UTC1970年1月1日0时开始经过的毫秒数来存储时间。</p></li><li><p>GMT 格林尼治时间</p></li><li><p>UTC 国际协调时间</p></li></ol><h2 id="_3-7-2date对象的创建" tabindex="-1">3.7.2Date对象的创建： <a class="header-anchor" href="#_3-7-2date对象的创建" aria-label="Permalink to &quot;3.7.2Date对象的创建：&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//无参数的情况下返回值为当前时间。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(milliseconds);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dateString);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year, month, day, hours, minutes, seconds, milliseconds);</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>不同浏览器显示的时间格式会有细微差异</p></div><h2 id="_3-7-3date对象的方法" tabindex="-1">3.7.3Date对象的方法： <a class="header-anchor" href="#_3-7-3date对象的方法" aria-label="Permalink to &quot;3.7.3Date对象的方法：&quot;">​</a></h2><ul><li><code>Date.now</code>返回自1970年1月1日 00:00:00 UTC到当前时间的毫秒数。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nowTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><ul><li><code>Date.parse</code>返回自1970年1月1日 00:00:00 UTC到指定日期（字符串）的毫秒数。 支持的时间格式如下：<code>1/24/2016</code>/<code>January 24,2016</code>/<code>Sun Jan 24 2016 10:10:10 GMT+0800</code></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1/24/2016&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><code>Date.UTC</code>返回自1970年1月1日 00:00:00 UTC到指定构造函数的毫秒数。 Date.UTC(year,month,date,hrs,min,sec,ms)</li></ul><blockquote><p><code>year</code>1900 年后的某一年份。<br><code>month</code>0 到 11 之间的一个整数，表示月份。<br><code>date</code>1 到 31 之间的一个整数，表示某月当中的第几天。<br><code>hrs</code>0 到 23 之间的一个整数，表示小时。<br><code>min</code>0 到 59 之间的一个整数，表示分钟。<br><code>sec</code>0 到 59 之间的一个整数，表示秒。<br><code>ms</code>0 到 999 之间的一个整数，表示毫秒。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UTC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2012</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><code>getFullYear</code>从 Date 对象以四位数字返回年份。</li><li><code>getMonth</code>从 Date 对象返回月份 (0 ~ 11)。</li><li><code>getDate</code>从 Date 对象返回一个月中的某一天 (1 ~ 31)。</li><li><code>getDay</code>从 Date 对象返回一周中的某一天 (0 ~ 6)。</li><li><code>getHours</code>返回 Date 对象的小时 (0 ~ 23)。</li><li><code>getMinutes</code>返回 Date 对象的分钟 (0 ~ 59)。</li><li><code>getSeconds</code>返回 Date 对象的秒数 (0 ~ 59)。</li><li><code>getMilliseconds</code>返回 Date 对象的毫秒(0 ~ 999)。</li><li><code>getTime</code>返回 1970 年 1 月 1 日至今的毫秒数。</li><li><code>getTimezoneOffset</code>返回本地时间与格林威治标准时间 (GMT) 的分钟差</li><li><code>getUTCDate</code>根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。</li><li><code>getUTCDay</code>根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。</li><li><code>getUTCFullYear</code>根据世界时从 Date 对象返回四位数的年份。</li><li><code>getUTCHours</code>根据世界时返回 Date 对象的小时 (0 ~ 23)。</li><li><code>getUTCMilliseconds</code>根据世界时返回 Date 对象的毫秒(0 ~ 999)。</li><li><code>getUTCMinutes</code>根据世界时返回 Date 对象的分钟 (0 ~ 59)。</li><li><code>getUTCMonth</code>根据世界时从 Date 对象返回月份 (0 ~ 11)。</li><li><code>getUTCSeconds</code>根据世界时返回 Date 对象的秒钟 (0 ~ 59)。</li><li><code>setDate</code>设置 Date 对象中月的某一天 (1 ~ 31)。</li><li><code>setFullYear</code>设置 Date 对象中的年份（四位数字）。</li><li><code>setHours</code>设置 Date 对象中的小时 (0 ~ 23)。</li><li><code>setMilliseconds</code>设置 Date 对象中的毫秒 (0 ~ 999)。</li><li><code>setMinutes</code>设置 Date 对象中的分钟 (0 ~ 59)。</li><li><code>setMonth</code>设置 Date 对象中月份 (0 ~ 11)。</li><li><code>setSeconds</code>设置 Date 对象中的秒钟 (0 ~ 59)。</li><li><code>setTime</code>方法以毫秒设置 Date 对象。</li><li><code>setUTCDate</code>根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。</li><li><code>setUTCFullYear</code>根据世界时设置 Date 对象中的年份（四位数字）。</li><li><code>setUTCHours</code>根据世界时设置 Date 对象中的小时 (0 ~ 23)。</li><li><code>setUTCMilliseconds</code>根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。</li><li><code>setUTCMinutes</code>根据世界时设置 Date 对象中的分钟 (0 ~ 59)。</li><li><code>setUTCMonth</code>根据世界时设置 Date 对象中的月份 (0 ~ 11)。</li><li><code>setUTCSeconds</code>方法用于根据世界时 (UTC) 设置指定时间的秒字段。</li><li><code>toDateString</code>把 Date 对象的日期部分转换为字符串。</li><li><code>toISOString</code>使用 ISO 标准返回字符串的日期格式。</li><li><code>toJSON</code>以JSON 数据格式返回日期字符串。</li><li><code>toUTCString</code>根据世界时，把 Date 对象转换为字符串。</li></ul><h2 id="_3-7-4date对象的相关字符串方法" tabindex="-1">3.7.4Date对象的相关字符串方法： <a class="header-anchor" href="#_3-7-4date对象的相关字符串方法" aria-label="Permalink to &quot;3.7.4Date对象的相关字符串方法：&quot;">​</a></h2><ul><li><code>toSting</code>把Date实例的字符串表示</li><li><code>toDateSting</code>把Date的日期部分字符串表示</li><li><code>toTimeSting</code>把Date的时间部分字符串表示</li><li><code>toLocaleString</code>根据本地时区把 Date 对象转换为字符串</li><li><code>toLocaleDateString</code>根据本地时区把，把 Date 对象的日期部分转换为字符串。</li><li><code>toLocaleTimeString</code>根据本地时区把，把 Date 对象的时间部分转换为字符串。</li><li><code>valueOf</code>转换为毫秒数</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li>格式不正确会返回NaN</li><li>注意UTC时间和时区的换算，如东八区和标准时间是八小时时差</li></ul></div>`,17),d=[l];function o(n,h,c,p,k,r){return s(),e("div",null,d)}const E=i(t,[["render",o]]);export{D as __pageData,E as default};
