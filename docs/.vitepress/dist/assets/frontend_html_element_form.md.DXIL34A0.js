import{_ as a,c as t,o as s,aR as i}from"./chunks/framework.BwSdcL0X.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/html/element/form.md","filePath":"frontend/html/element/form.md","lastUpdated":1715234692000}'),e={name:"frontend/html/element/form.md"},l=i(`<h3 id="input元素" tabindex="-1">input元素 <a class="header-anchor" href="#input元素" aria-label="Permalink to &quot;input元素&quot;">​</a></h3><p>用来设置表单中的内容项，比如输入内容的文本框，按钮等。 不仅可以布置在表单中，也可以在表单之外的元素使用。</p><h4 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h4><ul><li><code>type</code>：指定输入内容的类型，默认为text:单行文本框；</li><li><code>name</code>:输入内容的识别名称，传递参数时候的参数名称；</li><li><code>value</code>:默认值；</li><li><code>maxlength</code>:输入的最大字数；</li><li><code>readonly</code>：只读属性，设置内容不可变更，提交时会以前发送至服务器；</li><li><code>disabled</code>：设置为不可用（不可操作）；</li><li><code>required</code>：设置该内容为必须填写项，否则无法提交；</li><li><code>placeholder</code>：设置默认值，当文本框获得焦点时被清空，对text/url/tel/email/ password/search有效；</li><li><code>autocomplet</code>：属性值为on/off,定义是否开启浏览器自动记忆功能；</li><li><code>autofocus</code>：自动获得焦点；</li><li><code>accesskey</code>：指定快捷键win中，指定快捷键后，按Alt+“快捷键”,便会获得焦点</li><li><code>tabindex</code>：指定按Tab键时，项目间的移动顺序</li><li><code>autocomplet</code>： HTML5新增属性属性值为on/off,定义是否开启浏览器自动记忆功能</li><li><code>pattern</code>：设定输入类型的正则表达式</li><li><code>type</code>属性</li></ul><blockquote><p>text:默认为。<br> password:密码状态输入。<br> submit:提交按钮，点击将数据发送至服务器。<br> button:普通按钮。</p></blockquote><blockquote><div class="warning custom-block"><p class="custom-block-title">submit于button的区别</p><table><thead><tr><th>场景</th><th>Submit</th><th>Button</th></tr></thead><tbody><tr><td>网页上需要提交信息到服务器</td><td>√</td><td></td></tr><tr><td>网页上执行一个普通的事件，如重置、清空功能。</td><td></td><td>√</td></tr><tr><td>提交表单</td><td>√</td><td>需要绑定事件才能提交表单数据</td></tr><tr><td>局部刷新</td><td>不可以使用，在触发事件的同时会提交表单。</td><td>而button默认是不提交任何数据。可以绑定事件的方式来提交数据</td></tr><tr><td>没有表单，却要提交数据</td><td>submit需要有表单时，提交时才会带数据。当然使用submit也可以，但是前提要拦截onclick事件。</td><td>而button默认是不提交任何数据。可以绑定事件的方式来提交数据。</td></tr><tr><td>表单数据太多的时候</td><td>推荐</td><td>需要写很多数据的获取动作</td></tr><tr><td><span style="color:red;">*</span>提交数据是要使用JS进行校验的，但如果这时候用户禁用了JS，那么校验就失效了，如果后台也没有进行校验，那么不合法的数据就进入后台了。</td><td>不推荐</td><td>推荐：通过button提交数据，那么如果用户禁用JS,那么数据提交动作就激活不了</td></tr><tr><td>使用submit时需要验证请加 return true或false</td><td></td><td></td></tr></tbody></table><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;submit&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Submit&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;注 册&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; return check();&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></div><p>reset:重置按钮。<br> image：图片式提交按钮。<br> hidden；隐藏字段。该内容不会显示页面上，一般为网页设计者设置的变量数据，提交时，隐藏内容会提交到服务器。<br><span style="color:red;">*</span>email:表示要输入一个电子邮箱，并验证输入内容。<br><span style="color:red;">*</span>url:表示要输入一个网址，并验证输入内容。<br><span style="color:red;">*</span>tel:表示输入的内容是一个电话号码，不验证输入内容。<br><span style="color:red;">*</span>number:可以配合input的max/min/step/value规定允许输入的最大值/最小值/步长/默认值。<br><span style="color:red;">*</span>range(活动条):可以配合input的max/min/step/value规定的最大值/最小值/步长/默认值。<br><span style="color:red;">*</span>时间类:包括datetime/datetime-local/date/month/week/time。<br><span style="color:red;">*</span>color:可以建立一个颜色的选择输入框。<br><span style="color:red;">*</span>seacrch:用于建立一个搜索框，用来供用户输入搜素的关键词。<br><span style="color:red;">*</span>file:用来创建一个文件选取的输入框,可通过accept属性规定选取文件的类型，比如图片/视频（multiple：多文件上传）。<br><span style="color:red;">*</span>checkbox:复选框（可以多选）通过checked属性可设置默认选项，再次单击取消。<br><span style="color:red;">*</span>radio:单选框（可以多选）通过checked属性可设置默认选项，再次单击取消。必须将同一组单选项设置一个相同的name属性值。</p></blockquote><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><span style="color:red;">*</span>为html5新增元素，低版本浏览器可能不支持，且效果不一。</p></div><h3 id="select与html5新增的datalist元素" tabindex="-1">select与HTML5新增的datalist元素 <a class="header-anchor" href="#select与html5新增的datalist元素" aria-label="Permalink to &quot;select与HTML5新增的datalist元素&quot;">​</a></h3><h4 id="select元素" tabindex="-1">select元素: <a class="header-anchor" href="#select元素" aria-label="Permalink to &quot;select元素:&quot;">​</a></h4><p>创建下拉菜单选项列表，不仅可以在表单中使用，还可以在其他块元素和内联元素中使用。select只是定义一个下拉菜单列表，其具体列表项要通过option元素建立。</p><h4 id="option元素" tabindex="-1">option元素 <a class="header-anchor" href="#option元素" aria-label="Permalink to &quot;option元素&quot;">​</a></h4><p>用来建立一个选项，即下拉列表的一个菜单项。</p><h4 id="optgroup元素" tabindex="-1">optgroup元素 <a class="header-anchor" href="#optgroup元素" aria-label="Permalink to &quot;optgroup元素&quot;">​</a></h4><p>用来对option元素进行组合分组。</p><h4 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h4><p><code>size</code>用来定义列表中显示的列表项。</p><p><code>multiple</code>属性用来定义是否可以多选。</p><p>可以添加disabled属性和autofocus属性。</p><h4 id="datalist元素" tabindex="-1">datalist元素 <a class="header-anchor" href="#datalist元素" aria-label="Permalink to &quot;datalist元素&quot;">​</a></h4><p>创建一个选项列表(HTML5新增)</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">datalist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;标签规定了&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素可能的选项列表。需要使用&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素的 list 属性</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">来绑定 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">datalist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素。&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;browsers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">datalist</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;browsers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Internet Explorer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">datalist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="lable元素和label属性" tabindex="-1">lable元素和label属性 <a class="header-anchor" href="#lable元素和label属性" aria-label="Permalink to &quot;lable元素和label属性&quot;">​</a></h3><p>为input建立一个与之相关联的标签，点击lable元素内文本时就会触发相关联的input</p><h4 id="关联方法" tabindex="-1">关联方法： <a class="header-anchor" href="#关联方法" aria-label="Permalink to &quot;关联方法：&quot;">​</a></h4><ul><li>显式关联：（通过id和for建立关联）</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;checkbox&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;basket&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;basketball&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basketball&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;篮球&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>隐性关联（直接将表单控件放到label标签内）：</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;点击我可以使文本框获得焦点</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;theinput&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;theinput&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>可以通过accesskey建立快捷键</p><h4 id="lable属性" tabindex="-1">lable属性 <a class="header-anchor" href="#lable属性" aria-label="Permalink to &quot;lable属性&quot;">​</a></h4><p>在option元素中可以设定比标签内容更优先的选项</p><p>optgroup的分组名称</p><h3 id="textarea属性" tabindex="-1">textarea属性 <a class="header-anchor" href="#textarea属性" aria-label="Permalink to &quot;textarea属性&quot;">​</a></h3><p>用来建立多行输入文本框</p><p>元素标签中的内容将一文本框默认值的形式呈现</p><p>不仅可以用在表单中，也可以在其他块元素或内联元素中</p><p>textarea元素的属性：</p><p>name/disabled/readonly/form/reauired/autofocus/placeholder</p><p>rows属性：设置多行文本的行数（高度）</p><p>cols属性：设置多行文本的每行显示的字数（宽度）</p><h3 id="button属性" tabindex="-1">button属性 <a class="header-anchor" href="#button属性" aria-label="Permalink to &quot;button属性&quot;">​</a></h3><p>用来建立一个按钮从功能上来说，与input元素建立的按钮相同</p><p>button元素是双标签，其内部可以配置图片与文字，进行更复杂的样式设计</p><p>不仅可以在表单中使用，还可以在其他块元素和内联元素中使用</p><p>button元素的属性</p><p>type属性：可以设置三个值 submit/reset/button与input元素设置的按钮含义相同</p><p>name/vlue/disable属性：与input的用法相同</p><p>autofocus属性：设置按钮自动获得焦点。</p><p>form属性：设定按钮隶属于哪一个或多个表单</p><p>formmethod属性：设定表单的提交方式，将覆盖原本的提交方式</p><p>formnovalidate属性：设定表单将会覆盖原本的novalidate属性</p><p>fomaction属性：指定表单数据发送对象，将覆盖原来的action属性设定</p><p>formenctype属性;指定表单的数据发送类型，将覆盖原本的enctype属性设定</p><p>formtarget属性：将覆盖原本的target属性设定</p><p>重要事项：如果在表单中使用 button 元素，不同的浏览器会提交不同的值。Internet Explorer 将提交 button元素开始标签与结束标签之间的文本，而其他浏览器将提交 value 属性的内容。最好就是在表单中使用 input 元素来创建按钮。其他地方使用button创建按钮。</p><h3 id="form元素" tabindex="-1">form元素 <a class="header-anchor" href="#form元素" aria-label="Permalink to &quot;form元素&quot;">​</a></h3><p>将表单外的内容与表单进行关联</p><h4 id="novalidate属性" tabindex="-1">novalidate属性 <a class="header-anchor" href="#novalidate属性" aria-label="Permalink to &quot;novalidate属性&quot;">​</a></h4><p>设置数据提交时不进行验证</p><h4 id="enctype属性" tabindex="-1">enctype属性 <a class="header-anchor" href="#enctype属性" aria-label="Permalink to &quot;enctype属性&quot;">​</a></h4><p>仅作了解规定在发送到服务器之前应该如何对表单数据进行编码。通常情况下我们使用默认值即可</p><h4 id="accept-charset属性" tabindex="-1">accept-charset属性 <a class="header-anchor" href="#accept-charset属性" aria-label="Permalink to &quot;accept-charset属性&quot;">​</a></h4><p>仅作了解accept-charset 属性规定服务器处理表单数据所接受的字符集。 accept-charset 属性允许您指定一系列字符集，服务器必须支持这些字符集，从而得以正确解释表单中的数据。通常情况下我们使用默认值即可 此属性的默认值是 &quot;unknown&quot;，表示表单的字符集与包含表单的文档的字符集相同。</p><h3 id="h5新增的表单重写" tabindex="-1">H5新增的表单重写 <a class="header-anchor" href="#h5新增的表单重写" aria-label="Permalink to &quot;H5新增的表单重写&quot;">​</a></h3><p>form元素的属性小结</p><p>action/method/enctype/name/accept-charset/accept/target/autocomplete/novalidate</p><p>accept属性：（仅作了解）指定服务器处理表单时所能接受的数据形态，一般默认即可</p><p>accept-charset: （仅作了解）指定表单处理数据时所能接受的字符编码</p><p>target属性:指定在何处打开action属性所指定的URL目标</p><p>enctype属性：(了解即可)规定在发送到服务器之前应该如何对表单数据进行编码。</p><p>当method设定发送方式为get时，不必设置该属性；</p><p>当method设定发送方式为post时该属性才有效；</p><p>默认地，表单数据会编码为 &quot;application/x-www-form-urlencoded&quot;。就是说，在发送到服务器之前，所有字符都会进行编码（空格转换为 &quot;+&quot; 加号，特殊符号转换为 ASCII HEX 值）。</p><p>当值设为&quot;multipart/form-data&quot;时表示：不对字符编码。在使用包含文件上传控件的表单时（比如当input的type值为file时），必须使用该值。</p><p>text/plain:空格转换为 &quot;+&quot; 加号，但不对特殊字符编码。</p><p>表单的重写：重写 form 元素的某些属性设定。</p><p>表单重写属性适用于提交按钮</p><p>formaction - 重写表单的 action 属性</p><p>formenctype - 重写表单的 enctype 属性</p><p>formmethod - 重写表单的 method 属性</p><p>formnovalidate - 重写表单的 novalidate 属性</p><p>formtarget - 重写表单的 target 属性</p><h3 id="output" tabindex="-1">output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;output&quot;">​</a></h3><p>output元素是HTML5新增的元素，用来设置不同数据的输出</p><p>output元素的输出内容是由javascript代码控制的</p><p>oninput表单事件：当用户对元素数据的输入时触发</p><p>output元素的属性：</p><p>name属性：定义对象的唯一名称。（表单提交时使用）</p><p>form属性：定义所属的一个或多个表单。</p><p>for属性：定义输出域相关的一个或多个元素。</p><h3 id="progress" tabindex="-1">progress <a class="header-anchor" href="#progress" aria-label="Permalink to &quot;progress&quot;">​</a></h3><p>是HTML5中新增的元素，用来建立一个进度条</p><p>通常与JavaScript 一同使用，来显示任务的进度。</p><p>使用时注意浏览器的支持情况：Internet Explorer 9 以及更早的版本不支持</p><p>progress元素的属性：</p><p>max属性：规定当前进度的最大值。</p><p>value属性设定进度条当前默认显示值</p><p>form属性：规定进度条所属的一个或多个表单。</p><h3 id="meter" tabindex="-1">meter <a class="header-anchor" href="#meter" aria-label="Permalink to &quot;meter&quot;">​</a></h3><p>HTML5中新增的元素，用来建立一个度量条,用来表示度量衡的评定</p><p>通常与JavaScript 一同使用，来显示任务的进度。</p><p>meter元素的属性：</p><p>value属性设定进度条当前默认显示值</p><p>max属性：规定范围的最大值，默认值为1.</p><p>min属性：规定范围的最小值，默认值为0.</p><p>low属性：规定被视作低的标准。</p><p>high属性：规定被视作高标准。</p><p>form属性：规定所属的一个或多个表单。</p><h3 id="keygen" tabindex="-1">keygen <a class="header-anchor" href="#keygen" aria-label="Permalink to &quot;keygen&quot;">​</a></h3><p>HTML5中新增的元素，用来建立一个密钥生成器</p><p>当提交表单时，私钥存储在本地，公钥发送到服务器。主要作用是提供一种用户验证身份的方法</p><p>目前Internet Explorer 和 Safari暂不支持</p><p>keygen元素的属性：</p><p>name/form/autofocus/disabled</p><p>challenge属性:将 keygen 的值设置为在提交时询问。</p><p>keytype属性：定义密钥类型，如设置为rsa（一种密码的算法），则生成 RSA 密钥。</p><p>RSA是目前最有影响力的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准。</p><h3 id="fieldset-legend" tabindex="-1">fieldset/legend <a class="header-anchor" href="#fieldset-legend" aria-label="Permalink to &quot;fieldset/legend&quot;">​</a></h3><p>fieldset元素：可将表单内的相关元素分组。</p><p>当一组表单元素放到fieldset标签内时，浏览器会以特殊方式来显示它们，通常会有一个边框。</p><p>没有必需的或唯一的属性。form/disabled属性可用。</p><p>legend元素：为 fieldset 元素定义标题</p><h3 id="details-summary" tabindex="-1">details/summary <a class="header-anchor" href="#details-summary" aria-label="Permalink to &quot;details/summary&quot;">​</a></h3><p>details元素：</p><p>用于描述文档或文档某个部分的细节。</p><p>通常与summary元素配合使用，可以为 details 定义标题。标题是可见的，用户点击标题时，会显示出 details中的内容。</p><p>details元素的属性：</p><p>open：规定在 HTML 页面上 details 是可见的。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>*目前还不是所以浏览器都支持</p></div>`,129),p=[l];function n(h,r,o,d,k,c){return s(),t("div",null,p)}const g=a(e,[["render",n]]);export{E as __pageData,g as default};
