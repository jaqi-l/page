import{_ as s,c as i,o as a,aR as n}from"./chunks/framework.CEJVZlIo.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"other/node/introduction.md","filePath":"other/node/introduction.md","lastUpdated":1715240887000}'),l={name:"other/node/introduction.md"},t=n(`<p><code>Node.js</code>是<code>JavaScript</code>服务器端运行时环境，<code>Node.js</code> 建立在 <code>Google Chrome V8 JavaScript</code> 引擎之上，不依赖第三方应用（<code>Apache</code>）,可以基于<code>Api</code>自己实现。<br><code>Node.js</code>应用在单个进程中运行，在其标准库中提供了一组异步 <code>I/O</code> 原语，以防止 JavaScript 代码阻塞。</p><ul><li>优势：前端入手、性能高、利于与前端代码整合。</li><li>劣势：安全和稳定性没有传统语言高。</li></ul><p><code>node.js</code>一般做中间层(更安全)：</p><blockquote><p>客户端--------&gt;服务器端客户端------&gt;node.js-----服务器</p></blockquote><ul><li>主流<code>JavaScript</code>运行时对比</li></ul><table><thead><tr><th>功能</th><th><code>Node</code></th><th><code>Deno</code></th><th><code>Bun</code></th></tr></thead><tbody><tr><td>底层语言</td><td>C++</td><td>Rust</td><td>Zig</td></tr><tr><td>JS引擎</td><td>V8（Google）</td><td>V8（Google）</td><td>JavaScriptCore（Apple）</td></tr><tr><td>版本号</td><td>20.5.1</td><td>1.36</td><td>0.7.3</td></tr><tr><td>Web API</td><td>✅（正在支持中）</td><td>✅</td><td>✅</td></tr><tr><td>TypeScript/JSX</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>Bundle</td><td>❌</td><td>✅（准备放弃）</td><td>✅</td></tr><tr><td>Compile（可执行文件）</td><td>✅（实验性质，正在支持中）</td><td>✅</td><td>✅</td></tr><tr><td>本地ESM</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>远程ESM（URL导入）</td><td>❌</td><td>✅</td><td>❌</td></tr><tr><td>CommonJS</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>package.json</td><td>✅</td><td>✅（部分支持）</td><td>✅</td></tr><tr><td>.npmrc</td><td>✅</td><td>❌（可能会支持）</td><td>❌（好像不准备支持）</td></tr><tr><td>安全校验（权限）</td><td>✅（正在支持中）</td><td>✅</td><td>❌</td></tr><tr><td>代码校验、格式化</td><td>❌</td><td>✅</td><td>❌</td></tr><tr><td>内置测试库</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>宏</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>插件（转换其它类型文件）</td><td>❌</td><td>❌</td><td>✅</td></tr></tbody></table><p><a href="https://zhuanlan.zhihu.com/p/651166037" target="_blank" rel="noreferrer">华山论剑：Node.js、Deno与将要发布1.0的Bun</a></p><h2 id="_7-1-1-安装" tabindex="-1">7.1.1 安装： <a class="header-anchor" href="#_7-1-1-安装" aria-label="Permalink to &quot;7.1.1 安装：&quot;">​</a></h2><p>下载安装包双击安装即可。<a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">node.js官网</a></p><h2 id="_7-1-2-卸载" tabindex="-1">7.1.2 卸载： <a class="header-anchor" href="#_7-1-2-卸载" aria-label="Permalink to &quot;7.1.2 卸载：&quot;">​</a></h2><ul><li>window:</li></ul><ol><li>从卸载程序卸载程序和功能</li><li><code>C:\\Program Files (x86)\\Nodejs</code></li><li><code>C:\\Program Files\\Nodejs</code></li><li><code>C:\\Users\\{User}\\AppData\\Roaming\\npm（或%appdata%\\npm）</code></li><li><code>C:\\Users\\{User}\\AppData\\Roaming\\npm-cache（或%appdata%\\npm-cache）</code></li><li>重启，检查环节变量是否还有node、npm</li></ol><ul><li>MacOS:</li></ul><ol><li>按<code>shift+command+G</code>，打开前往文件夹的窗口，分别输入下列目录</li></ol><blockquote><p><code>/usr/local/lib</code>，删除node和node_modules相关的文件和文件夹<br><code>/usr/local/include</code>，删除node和 node_modules 相关的文件和文件夹 <code>/usr/local/bin</code>，删除node可执行文件</p></blockquote><ol start="2"><li>如果使用<code>brew</code>安装的还需要执行<code>brew uninstall node</code></li><li>个人文件夹下面的所有的local、lib以及include文件夹，删除node和node_modules相关的文件和文件夹</li><li>可能还需要如下指令</li></ol><blockquote><p><code>sudo rm /usr/local/bin/npm</code><br><code>sudo rm /usr/local/share/man/man1/node.1</code><br><code>sudo rm /usr/local/lib/dtrace/node.d</code><br><code>sudo rm -rf ~/.npm</code><br><code>sudo rm -rf ~/.node-gyp</code><br><code>sudo rm /opt/local/bin/node</code><br><code>sudo rm /opt/local/include/node</code><br><code>sudo rm -rf /opt/local/lib/node_modules</code></p></blockquote><h2 id="_7-1-3-运行与使用" tabindex="-1">7.1.3 运行与使用 <a class="header-anchor" href="#_7-1-3-运行与使用" aria-label="Permalink to &quot;7.1.3 运行与使用&quot;">​</a></h2><ul><li><p><code>node -v</code>查看node版本</p></li><li><p><code>npm -v</code>查看npm版本</p></li><li><p><code>node server.js</code>运行谁就node谁</p></li></ul><h2 id="_7-1-4-包管理工具-npm" tabindex="-1">7.1.4 包管理工具(npm) <a class="header-anchor" href="#_7-1-4-包管理工具-npm" aria-label="Permalink to &quot;7.1.4 包管理工具(npm)&quot;">​</a></h2><p>NPM是随同NodeJS一起安装的包管理工具。</p><ul><li><p><code>npm init</code>项目初始化（生成package.json文件）</p></li><li><p><code>npm init-y</code>快速初始化（生成package.json文件）</p></li><li><p><code>npm install</code>、<code>npm i</code>、 <code>npm ci</code>安装</p></li></ul><div class="tip custom-block"><p class="custom-block-title">安装命令的修饰符</p><p><code>-g</code>:全局安装<br><code>-D</code>:安装开发依赖（devDependencies）<br><code>-S</code>:安装生产依赖（dependencies）</p></div><div class="tip custom-block"><p class="custom-block-title">npm install、npm i 与 npm ci 的区别</p><p><code>npm install</code>:<br> 根据package文件安装依赖，根据package-lock确定版本，如果没有package-lock则生成package-lock<br><code>npm i</code>:<br> 根据package文件安装依赖，同时依据<code>^</code>或<code>~</code>升级相关依赖，并更新package-lock文件，不会生成npm-debug.log文件，卸载时需要使用<code>npm uninstall i</code>命令。<br><code>npm ci</code>:<br> 根据package文件安装依赖，根据package-lock确定版本没有则报错，不会更新依赖，也不会更新package-lock文件。</p></div><div class="tip custom-block"><p class="custom-block-title"><code>npm</code> 与 <code>npx</code> 的区别</p><p><code>npm</code>：<code>Node</code> 包管理器，在执行的时候必须本地安装依赖，无法执行远程包<br><code>npx</code>：<code>Node</code> 包执行器，在执行的时候不安装依赖，因此可以执行远程包</p></div><ul><li><p><code>npm unistall</code>卸载</p></li><li><p><code>npm get registry</code>:查看安装源</p></li><li><p><code>npm install 包 -registry=https://</code>:指定安装源</p></li><li><p><code>npm install --userconfig .npmrc</code>:根据指定的.npmrc文件安装</p></li><li><p><code>npm install el-components https://gitee.com/jaqi/component.git</code>:从本地或远程地址安装</p></li><li><p><code>npm config set registry http://</code>:修改安装源</p></li></ul><blockquote><p><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>:全局安装cnpm</p></blockquote><ul><li><code>npm login</code>:登录</li></ul><blockquote><p><code>npm login --auth-type=legacy</code>:npm &gt;= 9</p></blockquote><ul><li><code>npm publish</code>:发布npm包</li></ul><blockquote><p><code>npm publish --registry=&lt;registry&gt;</code>:发布到指定仓库</p></blockquote><ul><li><p><code>npm list</code>:查看当前项目安装的依赖的模块</p></li><li><p><code>npm list --global</code>:查看全局安装的依赖模块</p></li><li><p><code>npm update 包名</code>:更新包</p></li><li><p><code>npm view(v/info/show) 包</code>:查看包详情</p></li><li><p><code>npm config get userconfig</code>:查看当前使用的 .npmrc 配置文件路径</p></li><li><p><code>npm config get prefix</code>:获取 .npmrc 全局配置文件路径 $PREFIX</p></li><li><p><code>which npm</code>:npm 安装路径</p></li><li><p><code>npm –help</code>:帮助</p></li></ul><h4 id="package-json文件" tabindex="-1"><code>package.json</code>文件 <a class="header-anchor" href="#package-json文件" aria-label="Permalink to &quot;\`package.json\`文件&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jaqi.note&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//项目名</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//项目版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jaqi.l&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//作者</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;private&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//项目是否私有</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// serve 模式配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --open    在服务器启动时打开浏览器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --copy    在服务器启动时将 URL 复制到剪切版</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --mode    指定环境模式 (默认值：development)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --host    指定 host (默认值：0.0.0.0)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --port    指定 port (默认值：8080)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --https   使用 https (默认值：false)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// build 模式配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --mode        指定环境模式 (默认值：production)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --dest        指定输出目录 (默认值：dist)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --modern      面向现代浏览器带自动回退地构建应用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --target      app | lib | wc | wc-async (默认值：app)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --name        库或 Web Components 模式下的名字 (默认值：package.json 中的 &quot;name&quot; 字段或入口文件名)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --no-clean    在构建项目之前不清除目标目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --report      生成 report.html 以帮助分析包内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --report-json 生成 report.json 以帮助分析包内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --watch       监听文件变化</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;serve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-cli-service serve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-cli-service build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;lint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-cli-service lint&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生产依赖</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.6.11&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//使用2.6.11版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vue-template-compiler&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~2.6.11&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//使用2.6.x版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vuex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^3.2.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//使用3.x.x版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;jquery&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;latest&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //使用latest版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 开发依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;eslintConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ESLint 规则配置</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;plugin:vue/essential&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;eslint:recommended&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;parserOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;parser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;babel-eslint&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;no-debugger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;off&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//debugger 错误提示</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;no-console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;off&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//console 错误提示</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;browserslist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 项目的目标浏览器范围</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&gt; 1%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 兼容使用率大于1%的版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;last 2 versions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 兼容最近的2个版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;not dead&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>详见：<a href="https://dev.nodejs.cn/learn/the-package-json-guide/" target="_blank" rel="noreferrer">package.json指南</a></p><h4 id="npmrc文件" tabindex="-1"><code>.npmrc</code>文件 <a class="header-anchor" href="#npmrc文件" aria-label="Permalink to &quot;\`.npmrc\`文件&quot;">​</a></h4><div class="language-npmrc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">npmrc</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 设置 npm 包的下载地址</span></span>
<span class="line"><span>registry = https://registry.npm.taobao.org/:_authToken=yourAuthToken</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#设置以 @test 开头的包的下载地址</span></span>
<span class="line"><span>@test:registry = https://registry.npm.taobao.org/:_authToken=yourAuthToken</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#是否授权</span></span>
<span class="line"><span>always-auth=true</span></span></code></pre></div><h3 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm&quot;">​</a></h3><p><code>node &gt;16.13</code>内置pnpm</p><ul><li>开启实验性功能<code>corepack</code></li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span></span></code></pre></div><ul><li>更新最新的 pnpm</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prepare</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --activate</span></span></code></pre></div><h4 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h4><ul><li><p><code>pnpm istall</code>安装</p></li><li><p><code>pnpm install -- no-frozen-lockfile</code>安装（等效<code>npm ci</code>）</p></li><li><p><code>pnpm uninstall</code>卸载</p></li></ul><h2 id="_7-1-5-使用nvm、nvmw安装并管理node-js" tabindex="-1">7.1.5 使用<code>nvm</code>、<code>nvmw</code>安装并管理<code>node.js</code> <a class="header-anchor" href="#_7-1-5-使用nvm、nvmw安装并管理node-js" aria-label="Permalink to &quot;7.1.5 使用\`nvm\`、\`nvmw\`安装并管理\`node.js\`&quot;">​</a></h2><h4 id="安装" tabindex="-1">安装： <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装：&quot;">​</a></h4><ul><li>window: <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">nvmw镜像仓库</a></li></ul><ol><li>下载最新的安装包。</li><li>安装：安装的目录不能有中文和空格。</li><li>修改安装源：打开根目录的settings.txt文件，最后面添加上下面的源地址</li></ol><blockquote><p><code>node_mirror: https://npm.taobao.org/mirrors/node/</code><br><code>npm_mirror: https://npm.taobao.org/mirrors/npm/</code></p></blockquote><ul><li>MacOS: <a href="https://github.com/nvm-sh/nvm#install-script" target="_blank" rel="noreferrer">nvm镜像地址</a></li></ul><ol><li>复制最新的下载指令</li><li>在终端执行复制的镜像下载指令：<code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</code></li><li>复制环境变量代码</li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>通过homebrew安装nvm</p><ol><li>首先安装homebrew</li></ol><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/zsh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</span></span></code></pre></div><ol start="2"><li>安装nvm</li></ol><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvm</span></span></code></pre></div></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 案例：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$HOME/.nvm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$NVM_DIR/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\. </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$NVM_DIR/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  # This loads nvm</span></span></code></pre></div><ol start="4"><li>创建启动脚本</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .bash_profile</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开创建的文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .bash_profile</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将启动命令放入文件</span></span></code></pre></div><ol start="5"><li>使脚本开机自启</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到 ~ 目录下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编辑 .zshrc 文件，若是没有则自动建立</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .zshrc</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在最后一行写入下面内容</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">安装oh-my-zsh</p><ul><li>安装oh-my-zsh</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 国内镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/mirrors/oh-my-zsh.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.oh-my-zsh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.oh-my-zsh/templates/zshrc.zsh-template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span></code></pre></div><ul><li><p>确保以下文件都有环境变量代码（环境变量代码如上nvm）<br><code>~/.bash_profile</code>、<code>~/.zshrc</code>、<code>~/.profile</code></p></li><li><p>设置为默认的<code>Shell</code></p></li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chsh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>依次重载配置文件</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.profile</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">raw.githubusercontent.com host</p><p><a href="https://site.ip138.com/raw.githubusercontent.com/" target="_blank" rel="noreferrer">search host</a><br> 199.232.68.133 raw.githubusercontent.com</p><ul><li><code>.zshrc</code>推荐配置</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ZSH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.oh-my-zsh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZSH_THEME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;robbyrussell&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  git</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ZSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/oh-my-zsh.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># nvm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.nvm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # This loads nvm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pnpm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PNPM_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/Users/jaqi.l/Library/pnpm&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PNPM_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pyenv</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PYENV_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.pyenv&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PYENV_ROOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pyenv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init -)&quot;</span></span></code></pre></div></div><h4 id="卸载" tabindex="-1">卸载： <a class="header-anchor" href="#卸载" aria-label="Permalink to &quot;卸载：&quot;">​</a></h4><ul><li><p>window:同node.js卸载一样</p></li><li><p>MacOS:</p></li></ul><ol><li><code>cd ~</code></li><li><code>rm -rf .nvm</code></li></ol><h4 id="使用" tabindex="-1">使用： <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用：&quot;">​</a></h4><ul><li><p><code>nvm list</code> 列出已经安装的node版本，可以简写为nvm ls命令</p></li><li><p><code>nvm on</code> 启用node版本管理</p></li><li><p><code>nvm off</code> 禁用node版本，并不会卸载任何东西</p></li><li><p><code>nvm uninstall version</code> 卸载指定版本的node</p></li><li><p><code>nvm install version</code> 安装指定版本的node</p></li><li><p><code>nvm install latest</code> 安装最新版本</p></li><li><p><code>nvm use version</code> 使用指定版本的node</p></li><li><p><code>nvm alias default version</code> 给指定版本添加别名</p></li><li><p><code>nvm run version index.js</code> 使用指定版本运行node</p></li><li><p><code>nvm exec version npm install</code> 使用指定版本运行npm</p></li></ul><h2 id="_7-1-6-使用nrm安装并管理npm" tabindex="-1">7.1.6 使用<code>nrm</code>安装并管理<code>npm</code> <a class="header-anchor" href="#_7-1-6-使用nrm安装并管理npm" aria-label="Permalink to &quot;7.1.6 使用\`nrm\`安装并管理\`npm\`&quot;">​</a></h2><ul><li>安装</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span></span></code></pre></div><ul><li>查看可选源，星号代表当前使用源</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span></code></pre></div><ul><li>查看当前使用的源</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span></span></code></pre></div><ul><li>切换源</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>添加源</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>测试源速度</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>删除源</li></ul><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="_7-1-7-模块系统" tabindex="-1">7.1.7 模块系统 <a class="header-anchor" href="#_7-1-7-模块系统" aria-label="Permalink to &quot;7.1.7 模块系统&quot;">​</a></h2><p>一个js文件就是一个模块，通常放在node_modules文件夹中。</p><p>node.js使用<code>CommonJS</code>模块规范，<code>CommonJS</code>加载的是一个对象该对象只有在脚本运行完才会生成。（自 <code>Node.js</code> v12 起支持ESM规范<a href="/frontend/javascript/ECMAScript.html#_3-16-20-es6-module">3.16.20 Module</a> ）</p><ul><li>模块分类：</li></ul><ol><li>系统核心模块（<code>http</code>、<code>fs</code>、<code>url</code>...）</li><li>第三方模块</li><li>自定义模块</li></ol><ul><li>模块的引用</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> http</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 系统模块或第三方模块（node_modules下的模块）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./mod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义模块（引用时需要写相对路径）</span></span></code></pre></div><ul><li>自定义模块的导出</li></ul><ol><li>每个模块都有<code>module</code>对象</li><li><code>module</code>对象有一个<code>exports</code>对象</li><li>需要导出的成员需要挂载到<code>module.exports</code>对象中，<code>exports</code>是它的别名</li><li>导出单个成员<code>module.exports == xxx</code>，不能使用别名的方式</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 单个导出  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fn </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> funciton </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 多个导出 接收时是一个对象</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fn</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {fn,a:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,b:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,90),p=[t];function e(h,k,d,o,r,c){return a(),i("div",null,p)}const F=s(l,[["render",e]]);export{E as __pageData,F as default};
