import{_ as s,c as i,o as a,aR as n,bu as l}from"./chunks/framework.BwSdcL0X.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"other/nginx.md","filePath":"other/nginx.md","lastUpdated":1715234692000}'),h={name:"other/nginx.md"},p=n(`<h2 id="_2-1-基本介绍" tabindex="-1">2.1 基本介绍 <a class="header-anchor" href="#_2-1-基本介绍" aria-label="Permalink to &quot;2.1 基本介绍&quot;">​</a></h2><p><code>Nginx</code>是一个高性能的HTTP和反向代理web服务器。</p><h3 id="_2-1-1-nginx的优点" tabindex="-1">2.1.1 Nginx的优点： <a class="header-anchor" href="#_2-1-1-nginx的优点" aria-label="Permalink to &quot;2.1.1 Nginx的优点：&quot;">​</a></h3><ol><li>高并发、高性能</li><li>可扩展性好</li><li>高可靠性</li><li>热部署</li><li>BSD许可证书</li></ol><h3 id="_2-1-2-nginx的组成" tabindex="-1">2.1.2 Nginx的组成： <a class="header-anchor" href="#_2-1-2-nginx的组成" aria-label="Permalink to &quot;2.1.2 Nginx的组成：&quot;">​</a></h3><ol><li>二进制可执行文件</li><li><code>Nginx.conf</code>配置文件(默认是目录：<code>/etc/nginx/</code>)</li><li><code>access.log</code>访问日志(默认是目录：<code>/var/log/nginx/</code>)</li><li><code>error.log</code>错误日志(默认是目录：<code>/var/log/nginx/</code>)</li><li><code>html</code>默认站点目录(默认是目录：<code>/usr/share/nginx/html</code>)</li></ol><h3 id="_2-1-3-的主要发行版本" tabindex="-1">2.1.3 的主要发行版本 <a class="header-anchor" href="#_2-1-3-的主要发行版本" aria-label="Permalink to &quot;2.1.3 的主要发行版本&quot;">​</a></h3><ol><li><code>Tengine</code>是阿里巴巴基于<code>Nginx</code>开发的第三方模块，但与<code>Nginx</code>更新不同步。</li><li><code>OpenResty</code>是基于<code>Nginx</code>与<code>Lua</code>的高性能 Web 平台</li></ol><h3 id="_2-1-4-安装" tabindex="-1">2.1.4 安装 <a class="header-anchor" href="#_2-1-4-安装" aria-label="Permalink to &quot;2.1.4 安装&quot;">​</a></h3><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noreferrer">下载地址</a></p><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://nginx.org/download/nginx-1.23.0.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zvxf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-1.23.0.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pcre-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-devel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装到usr目录下</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-1.23.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix=/usr/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-http_stub_status_module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-http_ssl_module</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="_2-1-5-nginx配置语法" tabindex="-1">2.1.5 Nginx配置语法 <a class="header-anchor" href="#_2-1-5-nginx配置语法" aria-label="Permalink to &quot;2.1.5 Nginx配置语法&quot;">​</a></h3><ol><li>配置文件由指令块、指令组成。</li><li>指令块由大括号组成，里面的内容是指令。</li><li>指令以分号结尾，指令与参数空格分隔。</li><li><code>include</code>语句可以引入多个配置文件</li><li><code>#</code>注释</li><li><code>$</code>变量</li><li>部分指令支持正则</li><li>时间配置参数：<code>ms</code>毫秒、<code>s</code>秒、<code>m</code>分钟、<code>h</code>小时、<code>d</code>天、<code>w</code>周、<code>M</code>月、<code>y</code>年、</li><li>空间配置参数：<code></code>字节、<code>k</code>/<code>K</code>kb、<code>m</code>/<code>M</code>兆、<code>g</code>/<code>G</code>G</li></ol><h3 id="_2-1-6-nginx命令行" tabindex="-1">2.1.6 Nginx命令行 <a class="header-anchor" href="#_2-1-6-nginx命令行" aria-label="Permalink to &quot;2.1.6 Nginx命令行&quot;">​</a></h3><ul><li><code>start nginx</code>运行nginx</li><li><code>nginx</code>+<code>-?</code>帮助</li><li><code>nginx</code>+<code>-c</code>使用指定的配置文件</li><li><code>nginx</code>+<code>-g</code>指定配置命令</li><li><code>nginx</code>+<code>-p</code>指定运行目录</li><li><code>nginx</code>+<code>-t</code>、<code>-T</code>测试配置文件是否有错误</li><li><code>nginx</code>+<code>-v</code>、<code>-V</code>打印Nginx的版本信息、编译信息等</li><li><code>nginx</code>+<code>-s</code>+<code>stop</code>/<code>squti</code>/<code>reload</code>/<code>reopen</code> 立即停止服务、优雅的停止服务、重载配置文件、重新开始记录日志文件</li><li><code>ps -ef |grep nginx&quot;</code>查看nginx进程</li></ul><h3 id="_2-1-7-安全协议" tabindex="-1">2.1.7 安全协议 <a class="header-anchor" href="#_2-1-7-安全协议" aria-label="Permalink to &quot;2.1.7 安全协议&quot;">​</a></h3><ol><li><p>使用<code>Let&#39;s Encrypt</code>配置证书 <code>yum install python2-certbot-nginx</code>安装配置工具<br><code>certbot --nginx --nginx-server-root=/usr/local/openresty/nginx/conf/ -d</code>+<code>www.jaqi.com</code> 给指定域名生成证书，并放置/usr/local/openresty/nginx/conf/目录下</p></li><li><p>部署阿里云ssl证书</p></li></ol><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       443</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  localhost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       ssl_certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      ./ssl/ssl.pem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 证书的目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       ssl_certificate_key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ./ssl/ssl.key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 证书的目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       ssl_session_cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    shared:SSL:1m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       ssl_session_timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  5m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       ssl_ciphers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  HIGH:!aNULL:!MD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       ssl_prefer_server_ciphers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span></code></pre></div><ol start="3"><li>GoAccess工具：可视化实时查看access日志</li><li>安装依赖</li></ol><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> glib2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> glib2-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GeoIP-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ncurses-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zlib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zlib-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GeoIP-update</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#安装GeoIP-update地理位置数据库</span></span></code></pre></div><ol start="2"><li>安装主包</li></ol><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://tar.goaccess.io/goaccess-1.3.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goaccess-1.3.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> goaccess-1.3/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --enable-utf8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --enable-geoip=legacy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><div class="language-zsh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成日志页面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /usr/local/bin/goaccess</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> access.log</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> access.html</span></span></code></pre></div><h2 id="_2-2-构架基础" tabindex="-1">2.2 构架基础 <a class="header-anchor" href="#_2-2-构架基础" aria-label="Permalink to &quot;2.2 构架基础&quot;">​</a></h2><h4 id="_2-2-1-nginx的请求处理流程" tabindex="-1">2.2.1 Nginx的请求处理流程 <a class="header-anchor" href="#_2-2-1-nginx的请求处理流程" aria-label="Permalink to &quot;2.2.1 Nginx的请求处理流程&quot;">​</a></h4><p><img src="`+l+`" alt="Nginx的请求处理流程"></p><h4 id="_2-2-2-nginx的进程结构" tabindex="-1">2.2.2 Nginx的进程结构 <a class="header-anchor" href="#_2-2-2-nginx的进程结构" aria-label="Permalink to &quot;2.2.2 Nginx的进程结构&quot;">​</a></h4><ul><li>多进程Nginx结构</li></ul><ol><li><code>Master</code>进程= <code>CM</code>进程+<code>CL</code>进程+n个<code>worker</code>进程</li><li>进程之间通过共享内存通讯</li><li>每个<code>worker</code>进程独占一个CPU内核</li><li>一个线程同时处理多个连接，尽量减少切换进程。</li></ol><h4 id="_2-2-3-nginx进程管理-信号" tabindex="-1">2.2.3 Nginx进程管理-信号 <a class="header-anchor" href="#_2-2-3-nginx进程管理-信号" aria-label="Permalink to &quot;2.2.3 Nginx进程管理-信号&quot;">​</a></h4><ol><li>信号种类</li></ol><blockquote><p><code>term</code>/<code>int</code>立刻停止<br><code>quit</code>优雅的停止<br> \`\`hup<code>重载配置文件 </code>usr1<code>重新打开日志文件 </code>usr2<code>、</code>winch\`通过命令行发送信号，针对热部署使用</p></blockquote><ol start="2"><li>Master信号</li></ol><blockquote><p>监控worker进程<br> 管理worker进程<br> 接受信号<code>term</code>、<code>int</code>、<code>quit</code>、<code>hup</code>、<code>usr1</code>、<code>usr2</code>、 <code>winch</code></p></blockquote><ol start="3"><li>Worker信号</li></ol><blockquote><p>接受信号<code>term</code>、<code>int</code>、<code>quit</code>、<code>usr1</code>、<code>winch</code></p></blockquote><ol start="4"><li>命令行信号</li></ol><blockquote><p><code>hup</code>、<code>usr1</code>、<code>term</code>、<code>quit</code></p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>Nginx为什么是多进程结构：多线程共用一个地址空间，易出现缓存失效，Nginx使用多进程单线程，不仅能提高并发率,而且进程之间是相互独立，互不干扰。</li><li>什么是<code>http</code>请求优雅的关闭：判断连接是否空闲，并关闭空闲的连接</li><li>重载:先启动新的进程平稳运行后再关闭旧的进程，此时新进程可以向老进程发送<code>hup</code>信号进行回滚。</li></ol></div><h2 id="_2-3-http模块" tabindex="-1">2.3 HTTP模块 <a class="header-anchor" href="#_2-3-http模块" aria-label="Permalink to &quot;2.3 HTTP模块&quot;">​</a></h2><h2 id="_2-4-反向代理与负载均衡" tabindex="-1">2.4 反向代理与负载均衡 <a class="header-anchor" href="#_2-4-反向代理与负载均衡" aria-label="Permalink to &quot;2.4 反向代理与负载均衡&quot;">​</a></h2><h2 id="_2-5-配置文件详解" tabindex="-1">2.5 配置文件详解 <a class="header-anchor" href="#_2-5-配置文件详解" aria-label="Permalink to &quot;2.5 配置文件详解&quot;">​</a></h2><h3 id="_2-5-1-全局模块配置" tabindex="-1">2.5.1 全局模块配置 <a class="header-anchor" href="#_2-5-1-全局模块配置" aria-label="Permalink to &quot;2.5.1 全局模块配置&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user administrator administrators;  # 配置用户或者组，默认为nobody nobody。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">worker_processes 2;  # 允许生成的worker进程数，默认为1 建议设置为cpu内核数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pid /nginx/pid/nginx.pid;   # pid进程运行文件存放地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rror_log log/error.log debug;  # 设置日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span></span></code></pre></div><h3 id="_2-5-2-events模块的配置" tabindex="-1">2.5.2 events模块的配置 <a class="header-anchor" href="#_2-5-2-events模块的配置" aria-label="Permalink to &quot;2.5.2 events模块的配置&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">accept_mutex </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置网路连接序列化，防止惊群现象发生，默认为on</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">multi_accept </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置一个进程是否同时接受多个网络连接，默认为off</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">epoll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">worker_connections </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单个work的最大连接数，默认为512</span></span></code></pre></div><h3 id="_2-5-3-http模块的配置" tabindex="-1">2.5.3 http模块的配置 <a class="header-anchor" href="#_2-5-3-http模块的配置" aria-label="Permalink to &quot;2.5.3 http模块的配置&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mime.types;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 文件扩展名与文件类型映射表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application/octet-stream; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认文件类型，默认为text/plain</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    charset </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf-8; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认编码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启access日志服务 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    log_format </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myFormat </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">–$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> [$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time_local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">] $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body_bytes_sent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_referer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_user_agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义日志要记录的参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $remote_addr 与 $http_x_forwarded_for 用以记录客户端的ip地址；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $remote_user ：用来记录客户端用户名称；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $time_local ： 用来记录访问时间与时区；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $request ： 用来记录请求的url与http协议；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $status ： 用来记录请求状态；成功是200；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $body_bytes_s ent ：记录发送给客户端文件主体内容大小；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $http_referer ：用来记录从那个页面链接访问过来的；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # $http_user_agent ：记录客户端浏览器的相关信息；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log/access.log myFormat;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置日志存放位置并使用myFormat格式记录日志</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile_max_chunk </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    keepalive_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接超时时间，默认为75s，可以在http，server，location块。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启文件压缩</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_min_length </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 压缩小于一字节以上的 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_comp_level </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 压缩级别</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text/plain application/x-javascript; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要压缩的格式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mysvr </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  #负载均衡配置 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 127.0.0.1:7878; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认轮训模式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.3.1:7878  </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">max_fails</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fail_timeout=2 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># weight设置加权轮训 max_fails允许请求失败次数 fail_timeout允许请求失败的时间间隔</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      server 192.168.10.1:3333 down;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># down不参与负载均衡</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.10.121:3333 backup;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># backup热备(当上一个服务器宕机后运行)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ip_hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 让同一个客户端请求相同的服务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    error_page </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 502</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 503</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 504</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /50x.html </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 错误页</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        keepalive_requests </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单连接请求上限次数。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      4545</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        server_name </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 127.0.0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听地址       </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-5-4-location模块的配置" tabindex="-1">2.5.4 location模块的配置 <a class="header-anchor" href="#_2-5-4-location模块的配置" aria-label="Permalink to &quot;2.5.4 location模块的配置&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ~*^.+$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求的url过滤，正则匹配，= 严格匹配 ~区分大小写匹配 !~区分大小写不匹配 ~* 不区分大小写匹配 !~* 不区分大小写不匹配 ^~ 如果路由匹配，那么不进行正则匹配</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># root从当前目录下查找，alias是从根目录查看赵 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vv.txt;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置默认页</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http://mysvr;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求转向mysvr 定义的服务器列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  autoindex </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否开启自动目录 开启后用户可以访问全部静态资源  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  set </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$limit_rate </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 限制访问速度1k/s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  client_max_body_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许客户端请求的最大单文件字节数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  client_body_buffer_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 缓冲区代理缓冲用户端请求的最大字节数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_connect_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># nginx跟后端服务器连接超时时间(代理连接超时)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_send_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 后端服务器数据回传时间(代理发送超时)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_read_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接成功后，后端服务器响应时间(代理接收超时)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_buffer_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_buffers </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># proxy_buffers缓冲区，网页平均在32k以下的设置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_busy_buffers_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 高负荷下缓冲大小（proxy_buffers*2）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_temp_file_write_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  deny </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127.0.0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拒绝的ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  allow </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172.18.5.54</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许的ip       </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  rewrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /oldindex /index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">permanent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重定向 oldindex → index </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#客户端缓存上述静态数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 处理单页面应用的history模式 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  add_header </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Access-Control-Max-Age&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2592000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置响应头</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  add_header </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Content-Type&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;text/plain; charset=utf-8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  add_header </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Content-Length&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">拦截或转发请求时有无&quot;/&quot;的区别</p><ul><li>拦截：</li></ul><blockquote><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /api </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拦截所有api开头的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /api/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拦截所有api/开头的</span></span></code></pre></div></blockquote><ul><li>转发请求：</li></ul><blockquote><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /api </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://jaqi.api;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 相对路径 相当于被代理到 http://jaqi.api/api</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://jaqi.api/; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 绝对路径 相当于被代理到 http://jaqi.api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></blockquote></div><p>案例:</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#user  nobody;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">worker_processes </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logs/error.log;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#pid        logs/nginx.pid;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    worker_connections </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mime.types;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application/octet-stream;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    charset </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf-8;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    log_format </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> - $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> [$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time_local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">] requesthost:&quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;; &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; requesttime:&quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">request_time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;; &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body_bytes_sent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_referer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; - $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">request_body</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;&quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_user_agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; &quot;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logs/access.log;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    keepalive_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		gzip_min_length </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		gzip_comp_level </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		gzip_types </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		gzip_vary </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		gzip_disable </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MSIE [1-6]\\.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jaqi.lymhspring.com;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  301</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://jaqi.lymhspring.com$request_uri;   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # HTTPS server</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      443</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jaqi.lymhspring.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ./ssl/jaqi.lymhspring.com.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ./ssl/jaqi.lymhspring.com.key;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ssl_session_cache </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   shared:SSL:1m;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HIGH:!aNULL:!MD5;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ssl_prefer_server_ciphers </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /jaqi.note </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#客户端缓存上述静态数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            alias </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/home/admin/app/note/html/;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#文件路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#客户端缓存上述静态数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/home/admin/app/page/html;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#文件路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /navApi/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        	proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://127.0.0.1:7000/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x-real-ip $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x-forwarded-for $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host $http_host;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,53),t=[p];function k(e,r,d,g,E,o){return a(),i("div",null,t)}const F=s(h,[["render",k]]);export{y as __pageData,F as default};
