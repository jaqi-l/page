import{_ as s,c as i,o as a,aR as h}from"./chunks/framework.CEJVZlIo.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/javascript/math.md","filePath":"frontend/javascript/math.md","lastUpdated":1715234692000}'),t={name:"frontend/javascript/math.md"},e=h(`<h2 id="_3-8-1基本概念" tabindex="-1">3.8.1基本概念 <a class="header-anchor" href="#_3-8-1基本概念" aria-label="Permalink to &quot;3.8.1基本概念&quot;">​</a></h2><p><code>Math</code>对象用于执行数学任务。</p><p><code>Math</code>对象并不像<code>Date</code>和<code>String</code>那样是对象的类，因此没有构造函数<code>Math()</code>。</p><h2 id="_3-8-2算数值" tabindex="-1">3.8.2算数值 <a class="header-anchor" href="#_3-8-2算数值" aria-label="Permalink to &quot;3.8.2算数值&quot;">​</a></h2><p><code>Math.PI</code>：返回圆周率（约等于3.14159）。</p><p><code>Math.E</code>：返回算术常量e，即自然对数的底数（约等于2.718）。</p><p><code>Math.SQRT2</code>：返回2的平方根（约等于 1.414）。</p><p><code>Math.SQRT1_2</code>：返回返回1/2的平方根（约等于 0.707）。</p><p><code>Math.LN2</code>：返回2的自然对数（约等于0.693）。</p><p><code>Math.LN10</code>：返回10的自然对数（约等于2.302）。</p><p><code>Math.LOG2E</code>：返回以2为底的e的对数（约等于 1.443）。</p><p><code>Math.LOG10E</code>：返回以10为底的e的对数（约等于0.434）。</p><p><code>Math.max</code>：返回一组数中的最大值</p><p><code>Math.min</code>：返回一组数中的最小值</p><blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(…arr); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(…arr); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span></code></pre></div></blockquote><h2 id="_3-8-3数值取整" tabindex="-1">3.8.3数值取整 <a class="header-anchor" href="#_3-8-3数值取整" aria-label="Permalink to &quot;3.8.3数值取整&quot;">​</a></h2><p><code>Math.ceil(x)</code>：对数进行上舍入。</p><p><code>Math.floor(x)</code>：对数进行下舍入。</p><blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 简写</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~~</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.9</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // true</span></span></code></pre></div></blockquote><p><code>Math.round()</code>：把数四舍五入为最接近的整数。</p><p><code>toFixed(x)</code>：把数四舍五入为最接近的x位小数。</p><h2 id="_3-8-4随机数" tabindex="-1">3.8.4随机数 <a class="header-anchor" href="#_3-8-4随机数" aria-label="Permalink to &quot;3.8.4随机数&quot;">​</a></h2><p><code>Math.random()</code>：返回0 ~ 1之间的随机数（并不包括0和1）。</p><blockquote><p>生成low,high之间的随机数：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> selec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">low</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">high</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">high</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">low</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">low);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></blockquote><h2 id="_3-8-5三角函数" tabindex="-1">3.8.5三角函数 <a class="header-anchor" href="#_3-8-5三角函数" aria-label="Permalink to &quot;3.8.5三角函数&quot;">​</a></h2><p><code>Math.cos(x)</code>：返回数的余弦。</p><p><code>Math.acos(x)</code>：返回x的反余弦值。</p><p><code>Math.sin(x)</code>：返回数的正弦。</p><p><code>Math.asin(x)</code>：返回x的反正弦值。</p><p><code>Math.tan(x)</code>：返回角的正切。</p><p><code>Math.atan(x)</code>：以介于-PI/2 与PI/2弧度之间的数值来返回x的反正切值。</p><h2 id="_3-8-6其他方法" tabindex="-1">3.8.6其他方法 <a class="header-anchor" href="#_3-8-6其他方法" aria-label="Permalink to &quot;3.8.6其他方法&quot;">​</a></h2><p><code>Math.max(x,y)</code>：返回x和y中的最高值。</p><p><code>Math.min(x,y)</code>：返回x和y中的最低值。</p><p><code>Math.abs(x)</code>：返回x的绝对值。</p><p><code>Math.atan2(y,x)</code>：返回从x轴到点(x,y)的角度（介于 -PI/2 与 PI/2 弧度之间）。</p><p><code>Math.exp(x)</code>：返回e的指数。</p><p><code>Math.log(x)</code>：返回数的自然对数（底为e）。</p><p><code>Math.pow(x,y)</code>：返回x的y次幂。</p><blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 简写</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 8</span></span></code></pre></div></blockquote><p><code>Math.valueOf()</code>：返回Math对象的原始值。</p>`,41),p=[e];function n(l,k,d,o,c,r){return a(),i("div",null,p)}const y=s(t,[["render",n]]);export{g as __pageData,y as default};
